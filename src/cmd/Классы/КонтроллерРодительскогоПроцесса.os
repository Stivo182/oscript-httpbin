#Использовать logos

Перем _ОжиданиеМеждуПроверками; // Число - Миллисекунды между проверками
Перем _ФоновоеЗадание;          // ФоновоеЗадание, Неопределено
Перем _Лог;                     // Лог

&Желудь
Процедура ПриСозданииОбъекта()
	_ОжиданиеМеждуПроверками = 5000;
	_Лог = Логирование.ПолучитьЛог("oscript.lib.httpbin");
КонецПроцедуры

#Область ПрограммныйИнтерфейс

// Запускает фоновое наблюдение за процессом с указанным идентификатором.
// Если наблюдаемый процесс завершается, текущий процесс автоматически завершится.
//
// Параметры:
//  PID - Число - Идентификатор родительского процесса для наблюдения
//
Процедура НачатьНаблюдение(PID) Экспорт

	Если Не _ФоновоеЗадание = Неопределено 
		И _ФоновоеЗадание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		ВызватьИсключение "Невозможно запустить наблюдение: уже активно наблюдение за процессом.";
	КонецЕсли;

	_Лог.Отладка("Запуск наблюдения за родительским процессом PID=%1", PID);

	ПараметрыМетода = Новый Массив();
	ПараметрыМетода.Добавить(PID);

	_ФоновоеЗадание = ФоновыеЗадания.Выполнить(ЭтотОбъект, "ПериодическаяПроверкаПроцесса", ПараметрыМетода);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПериодическаяПроверкаПроцесса(PID) Экспорт

	Пока Истина Цикл
		ЗавершитьЕслиПроцессОтсутствует(PID);
		Приостановить(_ОжиданиеМеждуПроверками);
	КонецЦикла;

КонецПроцедуры

Процедура ЗавершитьЕслиПроцессОтсутствует(PID)
			
	Процесс = НайтиПроцессПоИдентификатору(PID);
	Если Процесс = Неопределено Тогда
		_Лог.Отладка("Родительский процесс PID=%1 завершён. Завершение текущего процесса", PID);
		ТекущийПроцесс().Завершить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти