// BSLLS:UsingHardcodeNetworkAddress-off

#Использовать autumn
#Использовать winow

Перем Поделка; // Ссылка на объект Поделка (autumn)
Перем ВебСервер; // Ссылка на объект ПрикладнойВебСервер (winow)
Перем НастройкиВебСервера; // Ссылка на объект Настройки (winow)
Перем СлушательПорта; // Ссылка на объект СлушательПорта (winow)

Перем ЗапускатьВФоне; // Булево
Перем ОжидатьИнициализацию; // Булево

#Область ПрограммныйИнтерфейс

// Запускает сервис
//
// Возвращаемое значение:
//   ЭтотОбъект
Функция Запустить() Экспорт
	Если ЗапускатьВФоне Тогда
		ФоновыеЗадания.Выполнить(ВебСервер, "Старт");

		Если ОжидатьИнициализацию Тогда
			ОжидатьЗапуск();
		КонецЕсли;
	Иначе
		ВебСервер.Старт();
	КонецЕсли;
	Возврат ЭтотОбъект;
КонецФункции

// Останавливает сервис
//
// Возвращаемое значение:
//   ЭтотОбъект
Функция Остановить() Экспорт
	ВебСервер.Стоп();
	Возврат ЭтотОбъект;
КонецФункции

// Устанавливает порт сервиса
//
// Параметры:
//   Порт - Число - Номер порта
//
// Возвращаемое значение:
//   ЭтотОбъект
Функция УстановитьПорт(Порт) Экспорт
	НастройкиВебСервера.Порт = Порт;
	Возврат ЭтотОбъект;
КонецФункции

// Устанавливает хост сервиса
//
// Параметры:
//   Хост - Строка - Имя хоста / ip адрес
//
// Возвращаемое значение:
//   ЭтотОбъект
Функция УстановитьХост(Хост) Экспорт
	НастройкиВебСервера.ИмяХоста = Хост;
	Возврат ЭтотОбъект;
КонецФункции

// Запуск сервиса будет выполнен в фоновом режиме
//
// Параметры:
//  Флаг - Булево
//
// Возвращаемое значение:
//   ЭтотОбъект
Функция ЗапускатьВФоне(Флаг = Истина) Экспорт
	ЗапускатьВФоне = Флаг;
	Возврат ЭтотОбъект;
КонецФункции

// Ожидать инициализацию сервиса, запущенный в фоновом режиме
//
// Параметры:
//  Флаг - Булево
//
// Возвращаемое значение:
//   ЭтотОбъект
Функция ОжидатьИнициализацию(Флаг = Истина) Экспорт
	ОжидатьИнициализацию = Флаг;
	Возврат ЭтотОбъект;
КонецФункции

// Устанавливает задержку перед чтением сокета
//
// Параметры:
//   Задержка - Число - Задержка в миллисекундах (По умолчанию 65 мс)
Процедура УстановитьЗадержкуПередЧтениемСокета(Задержка) Экспорт
	НастройкиВебСервера.ЗадержкаПередЧтениемСокета = Задержка;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Cервис тестирования HTTP клиента.
// По умолчанию сервис запускается фоновым заданием и с ожиданием инициализации сервиса.
// Адрес по умолчанию - 127.0.0.1:3334
//
// Параметры:
//  ПоделкаОсени - Объект - Ссылка на объект Поделка (autumn)
&Желудь
&Характер("Компанейский")
Процедура ПриСозданииОбъекта(&Пластилин("Поделка") ПоделкаОсени = Неопределено)

	Если ПоделкаОсени = Неопределено Тогда
		Поделка = Новый Поделка;
		Поделка.ЗапуститьПриложение();
	Иначе
		Поделка = ПоделкаОсени;
	КонецЕсли;

	ВебСервер = Поделка.НайтиЖелудь("ВебСервер");
	НастройкиВебСервера = Поделка.НайтиЖелудь("Настройки");
	СлушательПорта = Поделка.НайтиЖелудь("СлушательПорта");

	НастройкиВебСервера.РазмерБуфера = 0;

	УстановитьХост("127.0.0.1");
	УстановитьПорт(3334);
	УстановитьЗадержкуПередЧтениемСокета(65);
	ЗапускатьВФоне ();
	ОжидатьИнициализацию();
	
КонецПроцедуры

Процедура ОжидатьЗапуск()

	Задержка = 100;
	МаксКоличествоИтераций = 10;
	НомерИтерации = 0;

	Пока Не СлушательПорта.Активен() Цикл
		НомерИтерации = НомерИтерации + 1;
		Приостановить(Задержка);

		Если НомерИтерации = МаксКоличествоИтераций Тогда
			Остановить();
			ВызватьИсключение СтрШаблон(
				"Не удалось запустить веб-сервер по адресу %1:%2 в течение %3 мс.",
				НастройкиВебСервера.ИмяХоста,
				НастройкиВебСервера.Порт,
				Задержка * МаксКоличествоИтераций);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти