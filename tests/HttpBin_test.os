// BSLLS:MagicNumber-off
// BSLLS:UnusedLocalVariable-off

#Использовать asserts
#Использовать 1connector
#Использовать "../src/core"

Перем HttpBin; // HttpBin

Процедура ПослеЗапускаТеста() Экспорт
	Если Не HttpBin = Неопределено Тогда
		HttpBin.Остановить();
	КонецЕсли;
КонецПроцедуры

&Тест
Процедура ТестДолжен_ЗапуститьСервисСинхронноИОстановить() Экспорт

	// Действие
	HttpBin = Новый HttpBin().Запустить();

	// Проверка
	Ожидаем.Что(HttpBin.Отвечает(), "Должен быть запущен").ЭтоИстина();

КонецПроцедуры

&Тест
Процедура ТестДолжен_ЗапуститьСервисАсинхронноИОстановить() Экспорт

	// Подготовка
	HttpBin = Новый HttpBin();	
	
	ВремяНачалаЗапуска = ТекущаяУниверсальнаяДатаВМиллисекундах();
	HttpBin.Запустить();
	ВремяЗапуска = ТекущаяУниверсальнаяДатаВМиллисекундах() - ВремяНачалаЗапуска;
	HttpBin.Остановить();

	Приостановить(200);
	
	// Действие
	HttpBin.ЗапуститьАсинх();

	Приостановить(ВремяЗапуска);

	// Проверка
	Ожидаем.Что(HttpBin.Отвечает(), "Должен быть запущен").ЭтоИстина();

КонецПроцедуры

&Тест
Процедура ТестДолжен_ЗапуститьСервисСКастомнымКонтроллеромИзФайла() Экспорт

	// Подготовка
	HttpBin = Новый HttpBin()
		.УстановитьРасположениеКонтроллеров("./tests/fixtures/КастомныеКонтроллеры/КастомныйКонтроллер.os")
		.Запустить();

	// Действие
	Ответ = КоннекторHTTP.Get(HttpBin.URL("/order/add"), , Новый Структура("Таймаут", 3)).Текст();

	// Проверка
	Ожидаем.Что(Ответ).Равно("success");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ЗапуститьСервисСКастомнымКонтроллеромИзКаталога() Экспорт

	// Подготовка
	HttpBin = Новый HttpBin()
		.УстановитьРасположениеКонтроллеров("./tests/fixtures/КастомныеКонтроллеры")
		.Запустить();

	// Действие
	Ответ = КоннекторHTTP.Get(HttpBin.URL("/order/add"), , Новый Структура("Таймаут", 3)).Текст();

	// Проверка
	Ожидаем.Что(Ответ).Равно("success");

КонецПроцедуры